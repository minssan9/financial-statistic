import java.sql.Wrapper

buildscript {
    ext {
        springBootVersion = '2.4.2'
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
    }
}
ext{
    projectGroup = 'com.minssan9'
    queryDslVersion = '4.2.1'
    lombokVersion = '1.18.10'
    projectVersion = '0.0.1-'+new Date().format('yyyyMMddHHmmss')
}


allprojects {
    group = "${projectGroup}"
    version = "${projectVersion}"
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.ewerk.gradle.plugins.querydsl"

    sourceCompatibility = 1.8


    configurations {
//        developmentOnly
//        runtimeClasspath {
//            extendsFrom developmentOnly
//        }
//        compileOnly {
//            extendsFrom annotationProcessor
//        }
        querydsl.extendsFrom compileClasspath
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
//        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.5.3'

        implementation 'com.google.code.gson:gson'

        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.2'
        compile('org.eclipse.persistence:javax.persistence:2.1.0')

//        implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
        compile("com.querydsl:querydsl-core:${queryDslVersion}")
        compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
        compile("com.querydsl:querydsl-apt:${queryDslVersion}")
        annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa'
        annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

        runtimeOnly 'mysql:mysql-connector-java'

        implementation 'org.slf4j:slf4j-api:1.7.25'
        implementation 'junit:junit:4.11'

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        implementation("org.projectlombok:lombok:${lombokVersion}")

        testImplementation("org.projectlombok:lombok:${lombokVersion}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        testCompileOnly("org.projectlombok:lombok:${lombokVersion}")


        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    }


    def querydslGenratedSrc = 'src/main/generated'
    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslGenratedSrc
    }
    compileQuerydsl{
        options.annotationProcessorPath = configurations.querydsl
    }
    sourceSets {
        main.java.srcDirs += [ querydslGenratedSrc ]
    }
    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file(querydslGenratedSrc)
    }

    clean.doLast {
        file(querydslGenratedSrc).deleteDir()
    }
    test {
        useJUnitPlatform()
    }

}
